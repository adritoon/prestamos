from flask import Flask, render_template, redirect, url_for, request, jsonify, make_response
from flask_sqlalchemy import SQLAlchemy
from flask_bcrypt import Bcrypt
from flask_jwt_extended import (
    JWTManager, create_access_token, set_access_cookies, unset_jwt_cookies,
    verify_jwt_in_request, get_jwt, get_jwt_identity, jwt_required
)
from datetime import timedelta, datetime, timezone, date
import os
import urllib.parse
from sqlalchemy import func, or_, and_
from decimal import Decimal
import pytz
import csv
from io import StringIO

app = Flask(__name__, static_folder='static', template_folder='templates')

# Configuraci√≥n de la base de datosa
DB_USER = os.getenv('DB_USER', 'postgres')
DB_PASSWORD = os.getenv('DB_PASSWORD', 'crust@ce0S') 
DB_NAME = os.getenv('DB_NAME', 'prestamos_db')

CLOUD_SQL_CONNECTION = os.getenv('CLOUD_SQL_CONNECTION')

if CLOUD_SQL_CONNECTION:
    # En Cloud Run con Cloud SQL socket
    DB_HOST = f"/cloudsql/{CLOUD_SQL_CONNECTION}"
    SQLALCHEMY_DATABASE_URI = (
        f"postgresql+psycopg2://{DB_USER}:{DB_PASSWORD}@/{DB_NAME}?host={DB_HOST}"
    )
else:
    # Local
    DB_HOST = os.getenv('DB_HOST', 'localhost')
    DB_PORT = os.getenv('DB_PORT', '5432')
    SQLALCHEMY_DATABASE_URI = (
        f"postgresql+psycopg2://{DB_USER}:{DB_PASSWORD}@{DB_HOST}:{DB_PORT}/{DB_NAME}"
    )

app.config["SQLALCHEMY_DATABASE_URI"] = SQLALCHEMY_DATABASE_URI
app.config["SQLALCHEMY_TRACK_MODIFICATIONS"] = False
